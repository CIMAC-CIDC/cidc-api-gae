"""Introduce example metadata models

Revision ID: 2e81ec9ab77a
Revises: a0f25824b2ae
Create Date: 2021-05-13 14:47:41.897194

"""
from sqlalchemy.sql.schema import UniqueConstraint
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = "2e81ec9ab77a"
down_revision = "a0f25824b2ae"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "assay_uploads",
        sa.Column("_created", sa.DateTime(), nullable=True),
        sa.Column("_updated", sa.DateTime(), nullable=True),
        sa.Column("_etag", sa.String(length=40), nullable=True),
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("status", sa.String(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "clinical_trials",
        sa.Column("protocol_identifier", sa.String(), nullable=False),
        sa.Column("nct_id", sa.String(), nullable=True),
        sa.Column("nci_id", sa.String(), nullable=True),
        sa.Column("trial_name", sa.String(), nullable=True),
        sa.Column("trial_description", sa.String(), nullable=True),
        sa.Column("trial_organization", sa.String(), nullable=True),
        sa.Column("grant_or_affiliated_network", sa.String(), nullable=True),
        sa.Column("trial_status", sa.String(), nullable=True),
        sa.Column("biobank", sa.String(), nullable=True),
        sa.Column("lead_cimac_pis", sa.String(), nullable=True),
        sa.Column("lead_cimac_contacts", sa.String(), nullable=True),
        sa.Column("lead_trial_staff", sa.String(), nullable=True),
        sa.Column("justification", sa.String(), nullable=True),
        sa.Column("biomarker_plan", sa.String(), nullable=True),
        sa.Column("data_sharing_plan", sa.String(), nullable=True),
        sa.PrimaryKeyConstraint("protocol_identifier"),
    )
    op.create_table(
        "manifest_uploads",
        sa.Column("_created", sa.DateTime(), nullable=True),
        sa.Column("_updated", sa.DateTime(), nullable=True),
        sa.Column("_etag", sa.String(length=40), nullable=True),
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "cohorts",
        sa.Column("trial_id", sa.String(), nullable=False),
        sa.Column("cohort_name", sa.String(), nullable=False),
        sa.ForeignKeyConstraint(["trial_id"], ["clinical_trials.protocol_identifier"]),
        sa.PrimaryKeyConstraint("trial_id", "cohort_name"),
    )
    op.create_table(
        "collection_events",
        sa.Column("trial_id", sa.String(), nullable=False),
        sa.Column("event_name", sa.String(), nullable=False),
        sa.ForeignKeyConstraint(["trial_id"], ["clinical_trials.protocol_identifier"]),
        sa.PrimaryKeyConstraint("trial_id", "event_name"),
    )
    op.create_table(
        "shipments",
        sa.Column("trial_id", sa.String(), nullable=False),
        sa.Column("manifest_id", sa.String(), nullable=False),
        sa.Column(
            "assay_priority",
            sa.Enum(
                "1",
                "2",
                "3",
                "4",
                "5",
                "6",
                "7",
                "8",
                "9",
                "10",
                "11",
                "12",
                "13",
                "14",
                "15",
                "Not Reported",
                "Other",
                name="assay_priority_enum",
            ),
            nullable=False,
        ),
        sa.Column(
            "assay_type",
            sa.Enum(
                "Olink",
                "WES",
                "RNAseq",
                "IHC",
                "CyTOF",
                "H&E",
                "ELISA",
                "mIF",
                "mIHC",
                "TCRseq",
                name="assay_enum",
            ),
            nullable=False,
        ),
        sa.Column(
            "courier",
            sa.Enum("FEDEX", "USPS", "UPS", "Inter-Site Delivery", name="courier_enum"),
            nullable=False,
        ),
        sa.Column("tracking_number", sa.String(), nullable=False),
        sa.Column("account_number", sa.String(), nullable=False),
        sa.Column(
            "shipping_condition",
            sa.Enum(
                "Frozen_Dry_Ice",
                "Frozen_Shipper",
                "Ice_Pack",
                "Ambient",
                "Not Reported",
                "Other",
                name="shipping_condition_enum",
            ),
            nullable=False,
        ),
        sa.Column("date_shipped", sa.Date(), nullable=False),
        sa.Column("date_received", sa.Date(), nullable=False),
        sa.Column(
            "quality_of_shipment",
            sa.Enum(
                "Specimen shipment received in good condition",
                "Specimen shipment received in poor condition",
                "Not Reported",
                "Other",
                name="quality_of_shipment_enum",
            ),
            nullable=False,
        ),
        sa.Column("ship_from", sa.String(), nullable=False),
        sa.Column("ship_to", sa.String(), nullable=False),
        sa.Column(
            "receiving_party",
            sa.Enum(
                "MDA_Wistuba",
                "MDA_Bernatchez",
                "MDA_Al-Atrash",
                "MSSM_Gnjatic",
                "MSSM_Rahman",
                "MSSM_Kim-Schulze",
                "MSSM_Bongers",
                "DFCI_Wu",
                "DFCI_Hodi",
                "DFCI_Severgnini",
                "DFCI_Livak",
                "Broad_Cibulskis",
                "Stanf_Maecker",
                "Stanf_Bendall",
                "NCH",
                "Adaptive",
                "FNLCR_MoCha",
                name="receiving_party_enum",
            ),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(["trial_id"], ["clinical_trials.protocol_identifier"]),
        sa.PrimaryKeyConstraint("trial_id", "manifest_id"),
        sa.UniqueConstraint("trial_id", "manifest_id"),
    )
    op.create_table(
        "participants",
        sa.Column("trial_id", sa.String(), nullable=False),
        sa.Column("cimac_participant_id", sa.String(), nullable=False),
        sa.Column("trial_participant_id", sa.String(), nullable=False),
        sa.Column("cohort_name", sa.String(), nullable=True),
        sa.Column(
            "gender",
            sa.Enum("Male", "Female", "Not Specified", "Other", name="gender_enum"),
            nullable=True,
        ),
        sa.Column(
            "race",
            sa.Enum(
                "American Indian/Alaska Native",
                "Asian",
                "Black/African American",
                "Native Hawaiian/Pacific Islander",
                "White",
                "Not Reported",
                "Unknown",
                "Other",
                name="race_enum",
            ),
            nullable=True,
        ),
        sa.Column(
            "ethnicity",
            sa.Enum(
                "Hispanic or Latino",
                "Not Hispanic or Latino",
                "Not reported",
                "Unknown",
                "Other",
                name="ethnicity_enum",
            ),
            nullable=True,
        ),
        sa.ForeignKeyConstraint(
            ["trial_id", "cohort_name"], ["cohorts.trial_id", "cohorts.cohort_name"]
        ),
        sa.ForeignKeyConstraint(["trial_id"], ["clinical_trials.protocol_identifier"]),
        sa.PrimaryKeyConstraint("trial_id", "cimac_participant_id"),
        sa.UniqueConstraint("trial_id", "cimac_participant_id"),
    )
    op.create_table(
        "samples",
        sa.Column("trial_id", sa.String(), nullable=False),
        sa.Column("cimac_participant_id", sa.String(), nullable=False),
        sa.Column("collection_event_name", sa.String(), nullable=False),
        sa.Column("shipment_manifest_id", sa.String(), nullable=False),
        sa.Column("cimac_id", sa.String(), nullable=False),
        sa.Column("shipping_entry_number", sa.Integer(), nullable=True),
        sa.Column("box_number", sa.String(), nullable=True),
        sa.Column("surgical_pathology_report_id", sa.String(), nullable=True),
        sa.Column("clinical_report_id", sa.String(), nullable=True),
        sa.Column("parent_sample_id", sa.String(), nullable=False),
        sa.Column("processed_sample_id", sa.String(), nullable=True),
        sa.Column("site_description", sa.String(), nullable=True),
        sa.Column("topography_code", sa.String(), nullable=True),
        sa.Column("topography_description", sa.String(), nullable=True),
        sa.Column("histology_behavior", sa.String(), nullable=True),
        sa.Column("histology_behavior_description", sa.String(), nullable=True),
        sa.Column("sample_location", sa.String(), nullable=False),
        sa.Column(
            "type_of_sample",
            sa.Enum(
                "Tumor Tissue",
                "Normal Tissue",
                "Skin Tissue",
                "Blood",
                "Bone Marrow",
                "Cerebrospinal Fluid",
                "Lymph Node",
                "Stool",
                "Not Reported",
                "Other",
                name="sample_types_enum",
            ),
            nullable=False,
        ),
        sa.Column(
            "type_of_tumor_sample",
            sa.Enum(
                "Metastatic Tumor",
                "Primary Tumor",
                "Not Reported",
                "Other",
                name="type_of_tumor_sample_enum",
            ),
            nullable=True,
        ),
        sa.Column(
            "sample_collection_procedure",
            sa.Enum(
                "Blood Draw",
                "Excision",
                "Core Biopsy",
                "Punch Biopsy",
                "Endoscopic Biopsy",
                "Bone Marrow Core Biopsy",
                "Bone Marrow Aspirate",
                "Lumbar Puncture",
                "Aspirate",
                "Fine-Needle Aspiration",
                "Not Reported",
                "Other",
                name="sample_collection_procedure_enum",
            ),
            nullable=True,
        ),
        sa.Column("core_number", sa.Integer(), nullable=True),
        sa.Column(
            "fixation_stabilization_type",
            sa.Enum(
                "Archival FFPE",
                "Fresh Specimen",
                "Frozen Specimen",
                "Formalin-Fixed Paraffin-Embedded",
                "Optimum cutting temperature medium",
                "Thaw-Lyse",
                "Not Reported",
                "Other",
                name="fixation_stabilization_type_enum",
            ),
            nullable=True,
        ),
        sa.Column(
            "type_of_primary_container",
            sa.Enum(
                "Sodium heparin",
                "Blood specimen container with EDTA",
                "Potassium EDTA",
                "Streck Blood Collection Tube",
                "Stool collection container with DNA stabilizer",
                "Not Reported",
                "Other",
                name="type_of_primary_container_enum",
            ),
            nullable=True,
        ),
        sa.Column("sample_volume", sa.Numeric(), nullable=True),
        sa.Column(
            "sample_volume_units",
            sa.Enum(
                "Microliter",
                "Milliliter",
                "Not Reported",
                "Other",
                name="volume_units_enum",
            ),
            nullable=True,
        ),
        sa.Column(
            "processed_sample_type",
            sa.Enum(
                "Whole Blood",
                "Plasma",
                "PBMC",
                "Buffy Coat",
                "Bone Marrow Mononuclear Cell",
                "Supernatant",
                "Cell Pellet",
                "H&E-Stained Fixed Tissue Slide Specimen",
                "Fixed Slide",
                "Tissue Scroll",
                "FFPE Punch",
                "Not Reported",
                "Other",
                name="processed_sample_type_enum",
            ),
            nullable=True,
        ),
        sa.Column("processed_sample_volume", sa.Numeric(), nullable=True),
        sa.Column(
            "processed_sample_volume_units",
            sa.Enum(
                "Microliter",
                "Milliliter",
                "Not Reported",
                "Other",
                name="volume_units_enum",
            ),
            nullable=True,
        ),
        sa.Column("processed_sample_concentration", sa.Numeric(), nullable=True),
        sa.Column(
            "processed_sample_concentration_units",
            sa.Enum(
                "Nanogram per Microliter",
                "Milligram per Milliliter",
                "Micrograms per Microliter",
                "Cells per Vial",
                "Not Reported",
                "Other",
                name="concentration_units_enum",
            ),
            nullable=True,
        ),
        sa.Column("processed_sample_quantity", sa.Numeric(), nullable=True),
        sa.Column(
            "processed_sample_derivative",
            sa.Enum(
                "Tumor DNA",
                "Tumor RNA",
                "Germline DNA",
                "Circulating Tumor-Derived DNA",
                "Not Reported",
                "Other",
                name="processed_sample_derivative_enum",
            ),
            nullable=True,
        ),
        sa.Column("sample_derivative_volume", sa.Numeric(), nullable=True),
        sa.Column(
            "sample_derivative_volume_units",
            sa.Enum(
                "Microliter",
                "Milliliter",
                "Not Reported",
                "Other",
                name="volume_units_enum",
            ),
            nullable=True,
        ),
        sa.Column("sample_derivative_concentration", sa.Numeric(), nullable=True),
        sa.Column(
            "sample_derivative_concentration_units",
            sa.Enum(
                "Nanogram per Microliter",
                "Milligram per Milliliter",
                "Micrograms per Microliter",
                "Cells per Vial",
                "Not Reported",
                "Other",
                name="concentration_units_enum",
            ),
            nullable=True,
        ),
        sa.Column("tumor_tissue_total_area_percentage", sa.Numeric(), nullable=True),
        sa.Column("viable_tumor_area_percentage", sa.Numeric(), nullable=True),
        sa.Column("viable_stroma_area_percentage", sa.Numeric(), nullable=True),
        sa.Column("necrosis_area_percentage", sa.Numeric(), nullable=True),
        sa.Column("fibrosis_area_percentage", sa.Numeric(), nullable=True),
        sa.Column("din", sa.Numeric(), nullable=True),
        sa.Column("a260_a280", sa.Numeric(), nullable=True),
        sa.Column("a260_a230", sa.Numeric(), nullable=True),
        sa.Column("pbmc_viability", sa.Numeric(), nullable=True),
        sa.Column("pbmc_recovery", sa.Numeric(), nullable=True),
        sa.Column(
            "pbmc_resting_period_used",
            sa.Enum(
                "Yes",
                "No",
                "Not Reported",
                "Other",
                name="pbmc_resting_period_used_enum",
            ),
            nullable=True,
        ),
        sa.Column("material_used", sa.Numeric(), nullable=True),
        sa.Column(
            "material_used_units",
            sa.Enum(
                "Microliters",
                "Milliliters",
                "Nanogram per Microliter",
                "Milligram per Milliliter",
                "Micrograms per Microliter",
                "Cells per Vial",
                "Slides",
                "Not Reported",
                "Other",
                name="material_units_enum",
            ),
            nullable=True,
        ),
        sa.Column("material_remaining", sa.Numeric(), nullable=True),
        sa.Column(
            "material_remaining_units",
            sa.Enum(
                "Microliters",
                "Milliliters",
                "Nanogram per Microliter",
                "Milligram per Milliliter",
                "Micrograms per Microliter",
                "Cells per Vial",
                "Slides",
                "Not Reported",
                "Other",
                name="material_units_enum",
            ),
            nullable=True,
        ),
        sa.Column(
            "material_storage_condition",
            sa.Enum(
                "RT",
                "4oC",
                "(-20)oC",
                "(-80)oC",
                "LN",
                "Not Reported",
                "Other",
                name="material_storage_condition_enum",
            ),
            nullable=True,
        ),
        sa.Column(
            "quality_of_sample",
            sa.Enum(
                "Pass", "Fail", "Not Reported", "Other", name="quality_of_sample_enum"
            ),
            nullable=True,
        ),
        sa.Column(
            "sample_replacement",
            sa.Enum(
                "Replacement Not Requested",
                "Replacement Requested",
                "Replacement Tested",
                "Not Reported",
                "Other",
                name="replace_enum",
            ),
            nullable=True,
        ),
        sa.Column(
            "residual_sample_use",
            sa.Enum(
                "Sample Returned",
                "Sample Sent to Another Lab",
                "Sample received from CIMAC",
                "Not Reported",
                "Other",
                name="residual_sample_use_enum",
            ),
            nullable=True,
        ),
        sa.Column("comments", sa.String(), nullable=True),
        sa.Column(
            "diagnosis_verification",
            sa.Enum(
                "Local review not consistent with diagnostic pathology report",
                "Local review consistent with diagnostic pathology report",
                "Not Available",
                "Not Reported",
                "Other",
                name="diagnosis_verification_enum",
            ),
            nullable=True,
        ),
        sa.Column(
            "intended_assay",
            sa.Enum(
                "Olink",
                "WES",
                "RNAseq",
                "IHC",
                "CyTOF",
                "H&E",
                "ELISA",
                "mIF",
                "mIHC",
                "TCRseq",
                name="assay_enum",
            ),
            nullable=True,
        ),
        sa.ForeignKeyConstraint(
            ["trial_id", "cimac_participant_id"],
            ["participants.trial_id", "participants.cimac_participant_id"],
        ),
        sa.ForeignKeyConstraint(
            ["trial_id", "collection_event_name"],
            ["collection_events.trial_id", "collection_events.event_name"],
        ),
        sa.ForeignKeyConstraint(
            ["trial_id", "shipment_manifest_id"],
            ["shipments.trial_id", "shipments.manifest_id"],
        ),
        sa.PrimaryKeyConstraint("trial_id", "cimac_id"),
        sa.UniqueConstraint("trial_id", "cimac_id"),
        sa.UniqueConstraint("cimac_id"),
    )
    op.create_table(
        "aliquots",
        sa.Column("sample_id", sa.String(), nullable=False),
        sa.Column("slide_number", sa.String(), nullable=False),
        sa.Column("quantity", sa.Integer(), nullable=True),
        sa.Column(
            "aliquot_replacement",
            sa.Enum(
                "Replacement Not Requested",
                "Replacement Requested",
                "Replacement Tested",
                "Not Reported",
                "Other",
                name="replace_enum",
            ),
            nullable=False,
        ),
        sa.Column(
            "aliquot_status",
            sa.Enum(
                "Aliquot Returned",
                "Aliquot Exhausted",
                "Remainder used for other Assay",
                "Aliquot Leftover",
                "Other",
                name="aliquot_status_enum",
            ),
            nullable=False,
        ),
        sa.Column(
            "material_extracted",
            sa.Enum("DNA", "RNA", "cfDNA", "Other", name="material_extracted_enum"),
            nullable=True,
        ),
        sa.Column("extracted_concentration", sa.String(), nullable=True),
        sa.Column("aliquot_amount", sa.String(), nullable=True),
        sa.Column("lymphocyte_influx", sa.String(), nullable=True),
        sa.ForeignKeyConstraint(["sample_id"], ["samples.cimac_id"]),
        sa.PrimaryKeyConstraint("sample_id", "slide_number"),
    )
    op.alter_column(
        "downloadable_files", "facet_group", existing_type=sa.VARCHAR(), nullable=False
    )
    op.alter_column(
        "upload_jobs", "gcs_xlsx_uri", existing_type=sa.VARCHAR(), nullable=True
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column(
        "upload_jobs", "gcs_xlsx_uri", existing_type=sa.VARCHAR(), nullable=False
    )
    op.alter_column(
        "downloadable_files", "facet_group", existing_type=sa.VARCHAR(), nullable=True
    )
    op.drop_table("aliquots")
    op.drop_table("samples")
    op.drop_table("participants")
    op.drop_table("shipments")
    op.drop_table("collection_events")
    op.drop_table("cohorts")
    op.drop_table("manifest_uploads")
    op.drop_table("clinical_trials")
    op.drop_table("assay_uploads")
    # ### end Alembic commands ###
